---
- name: Remove CONFIG directory if force_redeploy is true
  file:
    path: "../../config/"
    state: absent
  # If force_redeploy is TRUE, then execute it.
  # If force_redeploy is false, then don't.
  # If force_redeploy is unset, then `default(false)` will default it back to false
  # Extra Note: `... | bool` is added to ensure that this condition is represented as a TRUE/FALSE statement
  when: force_redeploy | default(false) | bool

- name: Copy the config_minecraft template to the CONFIG folder
  synchronize:
    src: ../template/config_minecraft/
    dest: "../../config/"

- name: Apply variables to minecraft templates and rename it
  template:
    src: "../../config/conf.d/stream-available/minecraft-template.conf.j2"
    dest: "../../config/conf.d/stream-available/minecraft-{{ minecraft.name }}.conf"

- name: Remove the .j2 minecraft template file
  file:
    state: absent
    path: "../../config/conf.d/stream-available/minecraft-template.conf.j2"

- name: Get the list of all .j2 files within newly initialized CONFIG folder
  find: 
    path: "../../config/"
    patterns: "*.j2"
    recurse: yes
  register: all_j2_files

- name: List all .j2 files
  debug:
    msg: "{{ item.path }}"
  with_items: "{{ all_j2_files.files }}"

- name: Apply variables to ALL .j2 template files
  template: 
    src: "{{ item.path }}"
    dest: "{{ item.path | regex_replace('\\.j2$', '') }}"
  with_items: "{{ all_j2_files.files }}"

- name: Remove the .j2 template files
  file:
    state: absent
    path: "{{ item.path }}"
  with_items: "{{ all_j2_files.files }}"

- name: Create symlink for the newly created minecraft configuration file
  file:
    src: "../stream-available/minecraft-{{ minecraft.name }}.conf"
    dest: "../../config/conf.d/stream-enabled/minecraft-{{ minecraft.name }}.conf"
    state: link
    force: yes
